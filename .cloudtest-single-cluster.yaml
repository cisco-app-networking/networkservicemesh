---
version: 1.0
root: "./.tests/cloud_test/single-cluster/"
timeout: 7200  # 2 hour total total timeout
shuffle-enabled: false
statistics:
  enabled: true
  interval: 30  # 30 seconds for statistics
providers:
  - name: "kind"    # A name of our provider
    kind: "shell"   # A type of provider, shell indicate we need to specify all operations with shell commands.
    instances: 1    # We need to have 1 instance of cloud.
    node-count: 3   # With 3 nodes, CloudTest will validate if cloud has 3 nodes alive.
    retry: 1        # A retry count if cloud is failed to start tool will try again.
    enabled: true   # Indicate Provider is active with config by default, if set to false, values could be overriden using command line arguments.
    timeout: 300    # 5 minutes to start cluster
    stop-delay: 10
    env:
      - KIND_CLUSTER_NAME=cloudtest-kind-$(rands10)   # Generate a uniq cluster name
      - CONFIG_LOCATION=$(tempdir)/config             # Put Kubernetes configuration file here, $(tempdir) a executable variable name pointing to temporary folder.
    scripts:
      start: make kind-start
      config: make kind-export-kubeconfig       # Use make file to generate kind config and put it into a file specified with CONFIG_LOCATION environment variable.
      stop: make kind-stop
      prepare: |
        make k8s-load-images
        make spire-install
        make k8s-config
executions:
  - name: "Single cluster tests"
    env:
      - ARTIFACTS_ARCHIVE=true
    source:
      tags:
        - basic
        - recover
        - usecase
    root: ./test/integration
    timeout: 300
    cluster-count: 1
    cluster-env:
      - KUBECONFIG
    on-fail: |
      make k8s-reset
reporting:
  junit-report: "results/junit-single-cluster-tests.xml"
